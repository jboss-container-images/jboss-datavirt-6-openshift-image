{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-datavirt",
            "tags": "jdv,datavirt,database,jboss",
            "version": "1.2.0",
            "openshift.io/display-name": "JBoss Data Virtualization 6.4 (no SSL)",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "description": "Application template for JBoss Data Virtualization 6.4 services built using S2I.",
            "template.openshift.io/long-description": "This template defines resources needed to develop Red Hat Data Virtualization based application, including a build configuration and application deployment configuration.",
            "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-data-virtualization/",
            "template.openshift.io/support-url": "https://access.redhat.com"
        },
        "name": "datavirt64-basic-s2i"
    },
    "labels": {
        "template": "datavirt64-basic-s2i",
        "jdv64": "1.2.0"
    },
    "message": "A new data service has been created in your project.  The username/password for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please be sure to create the secret named ${CONFIGURATION_NAME} containing the datasource configuration details required by the deployed VDB(s).",
    "parameters": [
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "value": "datavirt-app",
            "required": true
        },
        {
            "description": "The name of the secret containing configuration properties for the data sources.",
            "displayName": "Configuration Secret Name",
            "name": "CONFIGURATION_NAME",
            "value": "datavirt-app-config",
            "required": true
        },
        {
            "description": "Specify a custom hostname for the http route.  Leave blank to use default hostname, e.g.: <service-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom http Route Hostname",
            "name": "HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "description": "The URL of the repository with your application source code.",
            "displayName": "Git Repository URL",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/jboss-openshift/openshift-quickstarts",
            "required": true
        },
        {
            "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
            "displayName": "Git Reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "master",
            "required": false
        },
        {
            "description": "Set this to the relative path to your project if it is not in the root of your repository.",
            "displayName": "Context Directory",
            "name": "CONTEXT_DIR",
            "value": "datavirt64/dynamicvdb-datafederation/app",
            "required": false
        },
        {
            "description": "Username associated with Teiid data service.",
            "displayName": "Teiid Username",
            "name": "TEIID_USERNAME",
            "from": "[\\a]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Password for Teiid user.",
            "displayName": "Teiid User Password",
            "name": "TEIID_PASSWORD",
            "from": "[\\a\\A]{8}[\\d]{1}[\\A]{1}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Username associated with ModeShape.",
            "displayName": "ModeShape Username",
            "name": "MODESHAPE_USERNAME",
            "from": "[\\a]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Password for ModeShape user.",
            "displayName": "ModeShape User Password",
            "name": "MODESHAPE_PASSWORD",
            "from": "[\\a\\A]{8}[\\d]{1}[\\A]{1}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "LDAP Endpoint to connect for authentication, example: ldap://myldap.example.com",
            "displayName": "LDAP Endpoint",
            "name": "AUTH_LDAP_URL",
            "required": false
        },
        {
            "description": "Bind DN used for authentication, example: uid=admin,ou=users,ou=exmample,ou=com",
            "displayName": "LDAP Bind DN",
            "name": "AUTH_LDAP_BIND_DN",
            "required": false
        },
        {
            "description": "LDAP Credentials used for authentication",
            "displayName": "LDAP Bind Credentials",
            "name": "AUTH_LDAP_BIND_CREDENTIAL",
            "required": false
        },
        {
            "description": "The JMX ObjectName of the JaasSecurityDomain used to decrypt the password",
            "displayName": "LDAP JAAS Security Domain",
            "name": "AUTH_LDAP_JAAS_SECURITY_DOMAIN",
            "required": false
        },
        {
            "description": "LDAP Base DN of the top-level context to begin the user search",
            "displayName": "LDAP Base DN",
            "name": "AUTH_LDAP_BASE_CTX_DN",
            "required": false
        },
        {
            "description": "LDAP search filter used to locate the context of the user to authenticate. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. A common example for the search filter is (uid={0})",
            "displayName": "LDAP Base Search filter",
            "name": "AUTH_LDAP_BASE_FILTER",
            "required": false
        },
        {
            "description": "The search scope to use",
            "displayName": "LDAP Search scope",
            "name": "AUTH_LDAP_SEARCH_SCOPE",
            "required": false
        },
        {
            "description": "The timeout in milliseconds for user or role searches, example: 10000",
            "displayName": "LDAP Search time limit",
            "name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
            "required": false
        },
        {
            "description": "The name of the attribute in the user entry that contains the DN of the user.  This maybe necessary if the DN of the user itself contains special characters, backslash for example, that prevent correct user mapping.  If the attribute does not exist, the entrys DN is used.",
            "displayName": "LDAP DN attribute",
            "name": "AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE",
            "required": false
        },
        {
            "description": "A flag indicating if the DN is to be parsed for the username. If set to true, the DN is parsed for the username. If set to false the DN is not parsed for the username. This option is used together with usernameBeginString and usernameEndString.",
            "displayName": "LDAP Parse username",
            "name": "AUTH_LDAP_PARSE_USERNAME",
            "required": false
        },
        {
            "description": "Defines the String which is to be removed from the start of the DN to reveal the username. This option is used together with usernameEndString and only taken into account if parseUsername is set to true.",
            "displayName": "LDAP Username begin string",
            "name": "AUTH_LDAP_USERNAME_BEGIN_STRING",
            "required": false
        },
        {
            "description": "Defines the String which is to be removed from the end of the DN to reveal the username. This option is used together with usernameEndString and only taken into account if parseUsername is set to true.",
            "displayName": "LDAP Username end string",
            "name": "AUTH_LDAP_USERNAME_END_STRING",
            "required": false
        },
        {
            "description": "Name of the attribute containing the user roles.",
            "displayName": "LDAP Role attributeID",
            "name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
            "required": false
        },
        {
            "description": "The fixed DN of the context to search for user roles. This is not the DN where the actual roles are, but the DN where the objects containing the user roles are. For example, in a Microsoft Active Directory server, this is the DN where the user account is.  Example: ou=groups,ou=example,ou=com",
            "displayName": "LDAP Roles Search DN",
            "name": "AUTH_LDAP_ROLES_CTX_DN",
            "required": false
        },
        {
            "description": "A search filter used to locate the roles associated with the authenticated user. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. The authenticated userDN is substituted into the filter anywhere a {1} is used. An example search filter that matches on the input username is (member={0}). An alternative that matches on the authenticated userDN is (member={1}).",
            "displayName": "LDAP Role search filter",
            "name": "AUTH_LDAP_ROLE_FILTER",
            "required": false
        },
        {
            "description": "The number of levels of recursion the role search will go below a matching context. Disable recursion by setting this to 0.",
            "displayName": "LDAP Role recursion",
            "name": "AUTH_LDAP_ROLE_RECURSION",
            "required": false
        },
        {
            "description": "A role included for all authenticated users",
            "displayName": "LDAP Default role",
            "name": "AUTH_LDAP_DEFAULT_ROLE",
            "required": false
        },
        {
            "description": "Name of the attribute within the roleCtxDN context which contains the role name.  If the roleAttributeIsDN property is set to true, this property is used to find the role objects name attribute.",
            "displayName": "LDAP Role name attribute ID",
            "name": "AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID",
            "required": false
        },   
        {
            "description": "A flag indicating if the DN returned by a query contains the roleNameAttributeID. If set to true, the DN is checked for the roleNameAttributeID. If set to false, the DN is not checked for the roleNameAttributeID. This flag can improve the performance of LDAP queries.",
            "displayName": "LDAP Role DN contains roleNameAttributeID",
            "name": "AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN",
            "required": false
        },
        {
            "description": "Whether or not the roleAttributeID contains the fully-qualified DN of a role object. If false, the role name is taken from the value of the roleNameAttributeId attribute of the context name. Certain directory schemas, such as Microsoft Active Directory, require this attribute to be set to true.",
            "displayName": "LDAP Role Attribute ID is DN",
            "name": "AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN",
            "required": false
        },
        {
            "description": "If you are not using referrals, this option can be ignored. When using referrals, this option denotes the attribute name which contains users defined for a certain role, for example member, if the role object is inside the referral. Users are checked against the content of this attribute name. If this option is not set, the check will always fail, so role objects cannot be stored in a referral tree.",
            "displayName": "LDAP Referral user attribute ID",
            "name": "AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK",
            "required": false
        }, 
        {
            "description": "Whether to allow empty passwords. Most LDAP servers treat empty passwords as anonymous login attempts. To reject empty passwords, set this to false. ",
            "displayName": "Allow Empty Passwords",
            "name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
            "required": false
        },                        
        {
            "description": "A secret string used to configure the GitHub webhook.",
            "displayName": "Github Webhook Secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "A secret string used to configure the Generic webhook.",
            "displayName": "Generic Webhook Secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "Password used by JGroups to authenticate nodes in the cluster.",
            "displayName": "JGroups Cluster Password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Controls whether exploded deployment content should be automatically deployed",
            "displayName": "Deploy Exploded Archives",
            "name": "AUTO_DEPLOY_EXPLODED",
            "value": "false",
            "required": false
        },
        {
            "description": "Comma delimited list of source directories containing VDBs for deployment",
            "displayName": "VDB Deployment Directories",
            "name": "VDB_DIRS",
            "value": "",
            "required": false
        },
        {
            "displayName": "Maven mirror URL",
            "description": "Maven mirror to use for S2I builds",
            "name": "MAVEN_MIRROR_URL",
            "value": "",
            "required": false
        },
        {
            "displayName": "Artifact Directories",
            "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR",
            "value": "",
            "required": false
        },
        {
            "description": "Container memory limit",
            "name": "MEMORY_LIMIT",
            "value": "1Gi",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "targetPort": "http"
                    },
                    {
                        "name": "jdbc",
                        "port": 31000,
                        "targetPort": "jdbc"
                    },
                    {
                        "name": "odbc",
                        "port": 35432,
                        "targetPort": "odbc"
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The data virtualization services."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "clusterIP": "None",
                "ports": [
                    {
                        "name": "ping",
                        "port": 8888
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-ping",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true",
                    "description": "The JGroups ping port for clustering."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http (REST) service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "port": {
                    "targetPort": "http"
                },
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datavirt64-openshift:1.2"
                        },
                        "env": [
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "CUSTOM_INSTALL_DIRECTORIES",
                                "value": "extensions/*"
                            },
                            {
                                "name": "VDB_DIRS",
                                "value": "${VDB_DIRS}"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                     {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "configuration",
                                        "mountPath": "/etc/datavirt-environment",
                                        "readOnly": true
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "jdbc",
                                        "containerPort": 31000,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "odbc",
                                        "containerPort": 35432,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JGROUPS_PING_PROTOCOL",
                                        "value": "openshift.DNS_PING"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-ping"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "AUTO_DEPLOY_EXPLODED",
                                        "value": "${AUTO_DEPLOY_EXPLODED}"
                                    },
                                    {
                                        "name": "TEIID_USERNAME",
                                        "value": "${TEIID_USERNAME}"
                                    },
                                    {
                                        "name": "TEIID_PASSWORD",
                                        "value": "${TEIID_PASSWORD}"
                                    },
                                    {
                                        "name": "MODESHAPE_USERNAME",
                                        "value": "${MODESHAPE_USERNAME}"
                                    },
                                    {
                                        "name": "MODESHAPE_PASSWORD",
                                        "value": "${MODESHAPE_PASSWORD}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_URL",
                                        "value": "${AUTH_LDAP_URL}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BIND_DN",
                                        "value": "${AUTH_LDAP_BIND_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BIND_CREDENTIAL",
                                        "value": "${AUTH_LDAP_BIND_CREDENTIAL}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_JAAS_SECURITY_DOMAIN",
                                        "value": "${AUTH_LDAP_JAAS_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BASE_CTX_DN",
                                        "value": "${AUTH_LDAP_BASE_CTX_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BASE_FILTER",
                                        "value": "${AUTH_LDAP_BASE_FILTER}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_SEARCH_SCOPE",
                                        "value": "${AUTH_LDAP_SEARCH_SCOPE}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
                                        "value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE",
                                        "value": "${AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_PARSE_USERNAME",
                                        "value": "${AUTH_LDAP_PARSE_USERNAME}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_USERNAME_BEGIN_STRING",
                                        "value": "${AUTH_LDAP_USERNAME_BEGIN_STRING}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_USERNAME_END_STRING",
                                        "value": "${AUTH_LDAP_USERNAME_END_STRING}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
                                        "value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLES_CTX_DN",
                                        "value": "${AUTH_LDAP_ROLES_CTX_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_FILTER",
                                        "value": "${AUTH_LDAP_ROLE_FILTER}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_RECURSION",
                                        "value": "${AUTH_LDAP_ROLE_RECURSION}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_DEFAULT_ROLE",
                                        "value": "${AUTH_LDAP_DEFAULT_ROLE}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID",
                                        "value": "${AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN",
                                        "value": "${AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN",
                                        "value": "${AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK",
                                        "value": "${AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK}"
                                    },
                                    {
                                        "name": "ENV_FILES",
                                        "value": "/etc/datavirt-environment/*"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "configuration",
                                "secret": {
                                    "secretName": "${CONFIGURATION_NAME}"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}
